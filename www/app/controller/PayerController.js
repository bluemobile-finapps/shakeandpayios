/*
 * File: app/controller/PayerController.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Finappsparty.controller.PayerController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "#payerCancelAction": {
                tap: 'onPayerCancelActionTap'
            },
            "#payerOkAction": {
                tap: 'onPayerOkActionTap'
            }
        }
    },

    onPayerCancelActionTap: function(button, e, options) {
        this.cancelPayerOperation();
    },

    onPayerOkActionTap: function(button, e, options) {
        this.acceptPayerOperation();
    },

    cancelPayerOperation: function() {
        Ext.Viewport.setMasked({
            xtype: 'loadmask',
            message: ' Transfer cancelled ',
            indicator: false
        });
        setTimeout(function(){
            Ext.Viewport.setMasked(false);
            Ext.getCmp('payerPanel').hide();
        },1000);
    },

    acceptPayerOperation: function() {
        var me = this;
        var bpanel = Ext.getCmp('payerPanel');
        var data = bpanel.getData();

        Ext.Viewport.setMasked({
            xtype: 'loadmask',
            message: ' Getting payee account '
        });

        Ext.Ajax.request({
            url: me.getApplication().getController('UrlController').getBaseUrlServices()+'accept/send',
            params: {
                'idop': data.operationId
            },
            method: 'POST',
            success: function(response){
                var data = Ext.JSON.decode(response.responseText);
                Ext.Viewport.setMasked(false);
                if(data.data){
                    me.makeTransfer(data);
                }else{
                    Ext.getCmp('payerPanel').hide();
                    Ext.Msg.alert('Fail', 'The payee has gone :(');
                }
            },
            failure: function(response){
                Ext.Viewport.setMasked(false);
                Ext.getCmp('payerPanel').hide();
                Ext.Msg.alert('Fail', 'Something has gone wrong :(');  
            }

        });
    },

    makeTransfer: function(result) {
        var me = this;
        var bpanel = Ext.getCmp('payerPanel');
        var pdata = bpanel.getData();
        var token = Ext.getStore('User').getData().getAt(0).data.token;

        Ext.Viewport.setMasked({
            xtype: 'loadmask',
            message: ' Making transfer '
        });

        Ext.Ajax.request({
            url: me.getApplication().getController('UrlController').getTransferUrl(token),
            jsonData: {
                'originAccount': pdata.payerAccount,
                'destinationAccount': result.data.account,
                'value': pdata.amount,
                'additionalData':{
                    'concept': 'Shake and Pay',
                    'payee': pdata.name
                }
            },
            method: 'POST',
            success: function(response){
                Ext.Viewport.setMasked(false);
                Ext.Msg.alert('Success', 'Transfer done!!');  
                Ext.getCmp('payerPanel').hide();
            },
            failure: function(response){
                Ext.Viewport.setMasked(false);
                Ext.getCmp('payerPanel').hide();
                Ext.Msg.alert('Fail', 'Something has gone wrong :(');
            }

        });
    }

});